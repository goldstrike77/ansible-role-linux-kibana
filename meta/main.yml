galaxy_info:
  author: your name
  description: your description
  company: your company (optional)

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Some suggested licenses:
  # - BSD (default)
  # - MIT
  # - GPLv2
  # - GPLv3
  # - Apache
  # - CC-BY
  license: license (GPLv2, CC-BY, etc)

  min_ansible_version: 2.8

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  #github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies:
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.
  - role: 'ansible-role-linux-nginx'
    vars:
      ngx_block_agents: '{{ kibana_ngx_block_agents | bool | to_json }}'
      ngx_block_string: '{{ kibana_ngx_block_string | bool | to_json }}'
      ngx_compress: '{{ kibana_ngx_compress | bool | to_json }}'
      ngx_domain: '{{ kibana_ngx_domain }}'
      ngx_pagespeed: '{{ kibana_ngx_pagespeed | bool | to_json}}'
      ngx_port_http: '{{ kibana_ngx_port_http }}'
      ngx_port_https: '{{ kibana_ngx_port_https }}'
      ngx_ssl_protocols: '{{ kibana_ngx_ssl_protocols }}'
      ngx_version: '{{ kibana_ngx_version }}'
      ngx_site_path: '{{ kibana_ngx_site_path }}'
      ngx_logs_path: '{{ kibana_ngx_logs_path }}'
      ngx_proxy_read_timeout: '60'
      ngx_proxy_send_timeout: '60'
      ngx_allow_methods:
        - 'POST'
        - 'PUT'
        - 'GET'
        - 'HEAD'
        - 'DELETE'
      ngx_header:
        - 'Referrer-Policy "no-referrer-when-downgrade";'
        - 'Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;";'
        - 'X-Content-Type-Options "nosniff";'
        - 'X-Frame-Options "SAMEORIGIN";'
        - 'X-Xss-Protection "1; mode=block";'
      ngx_site:
        - domain: '{{ kibana_ngx_domain }}'
          syntax:
            - 'location / {'
            - '  expires off;'
            - '  proxy_buffering off;'
            - '  proxy_connect_timeout 30;'
            - '  proxy_http_version 1.1;'
            - '  proxy_read_timeout 60;'
            - '  proxy_redirect off;'
            - '  proxy_send_timeout 60;'
            - '  proxy_set_header Connection "Keep-Alive";'
            - '  proxy_set_header Host $host;'
            - '  proxy_set_header Proxy-Connection "Keep-Alive";'
            - '  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;'
            - '  proxy_set_header X-Forwarded-Host $host;'
            - '  proxy_set_header X-Forwarded-Server $host;'
            - '  proxy_set_header X-Real-IP $remote_addr;'
            - '  proxy_set_header X-Scheme $scheme;'
            - '  proxy_pass {% if kibana_https | bool and kibana_auth | bool %}https{% else %}http{% endif %}://backend_{{ kibana_ngx_domain }};'
            - '}'
          backend_address: '{{ kibana_servers }}'
          backend_port: '{{ kibana_port_server }}'
          sticky: 'ip_hash'
          keepalive: '{{ ansible_processor_vcpus * 4 }}'
    when: kibana_ngx_dept | bool
  - role: 'ansible-role-linux-elasticsearch'
    vars:
      elastic_auth: '{{ kibana_auth | bool }}'
      elastic_cluster: '{{ kibana_elastic_cluster }}'
      elastic_https: '{{ kibana_elastic_https | bool }}'
      elastic_pass: '{{ kibana_pass }}'
      elastic_path: '{{ kibana_elastic_path }}'
      elastic_port_rest: '{{ kibana_elastic_port_rest }}'
      elastic_servers: '{% if elastic_node_type == "coordinat" %}{{ kibana_elastic_hosts }}{% else %}{{ kibana_servers }}{% endif %}'
      elastic_version: '{{ kibana_version }}'
      elastic_heap_size: '{{ kibana_elastic_heap_size }}'
      elastic_memory_lock: '{{ kibana_elastic_memory_lock | bool }}'
      elastic_node_type: '{{ kibana_elastic_node_type }}'
    when: kibana_elastic_dept | bool
